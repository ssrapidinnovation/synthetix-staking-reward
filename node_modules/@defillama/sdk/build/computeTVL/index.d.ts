import { StringNumber } from "../types";
import { TokenPrices, GetCoingeckoLog } from "./prices";
declare type Balances = {
    [tokenAddressOrName: string]: StringNumber | Object;
};
declare type ReturnedTokenBalances = {
    [tokenSymbolOrName: string]: number;
};
export declare const chainToCoingeckoId: {
    bsc: string;
    ethereum: string;
    polygon: string;
    avax: string;
    fantom: string;
    xdai: string;
    heco: string;
    okexchain: string;
    harmony: string;
    kcc: string;
    celo: string;
    arbitrum: string;
    iotex: string;
    moonriver: string;
    solana: string;
    terra: string;
    tron: string;
    waves: string;
    klaytn: string;
    osmosis: string;
    kava: string;
    icon: string;
    optimism: string;
    eos: string;
    secret: string;
    rsk: string;
    neo: string;
    tezos: string;
    wan: string;
    ontology: string;
    algorand: string;
    zilliqa: string;
    kardia: string;
    cronos: string;
    aurora: string;
    boba: string;
    metis: string;
    telos: string;
    moonbeam: string;
    meter: string;
    sx: string;
    velas: string;
    milkomeda: string;
};
export default function (rawBalances: Balances, timestamp: number | "now", verbose?: boolean, knownTokenPrices?: TokenPrices, getCoingeckoLock?: GetCoingeckoLog, coingeckoMaxRetries?: number): Promise<{
    usdTvl: number;
    usdTokenBalances: ReturnedTokenBalances;
    tokenBalances: ReturnedTokenBalances;
}>;
export {};
